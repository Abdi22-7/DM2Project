@page
@model DM2Projekt.Pages.Bookings.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Booking</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Booking.GroupId" class="control-label"></label>
                <select asp-for="Booking.GroupId" class="form-control" asp-items="ViewBag.GroupId"></select>
            </div>

            <div class="form-group">
                <label asp-for="Booking.RoomId" class="control-label"></label>
                <select asp-for="Booking.RoomId" class="form-control" asp-items="ViewBag.RoomId" id="Booking_RoomId"></select>
            </div>

            <div class="form-group">
                <label asp-for="Booking.CreatedByUserId" class="control-label"></label>
                <select asp-for="Booking.CreatedByUserId" class="form-control" asp-items="ViewBag.CreatedByUserId"></select>
            </div>

            <div class="form-group" id="SmartboardWrapper">
                <label asp-for="Booking.SmartboardId" class="control-label"></label>
                <select name="Booking.SmartboardId" class="form-control" id="SmartboardSelect" style="display: none;">
                </select>
                <span id="NoSmartboardMessage" class="form-text text-muted" style="display: none;">
                    No smartboard is available for the selected room.
                </span>
            </div>

            <div class="form-group">
                <label for="weekStart">Week (starting Monday)</label>
                <input type="date" id="weekStart" class="form-control" />
            </div>

            <div class="form-group">
                <label for="dayOfWeek">Day</label>
                <select id="dayOfWeek" class="form-control">
                    <option value="">-- Select Day --</option>
                    <option value="1">Monday</option>
                    <option value="2">Tuesday</option>
                    <option value="3">Wednesday</option>
                    <option value="4">Thursday</option>
                    <option value="5">Friday</option>
                </select>
            </div>

            <div class="form-group">
                <label for="timeSlot">Available Time Slots</label>
                <select id="timeSlot" class="form-control" name="SelectedTimeSlot">
                    <option value="">-- Select Room + Day --</option>
                </select>
            </div>

            <input type="hidden" asp-for="Booking.StartTime" />
            <input type="hidden" asp-for="Booking.EndTime" />

            <div class="form-group">
                <label asp-for="Booking.Status" class="control-label"></label>
                <select asp-for="Booking.Status" class="form-control"
                asp-items="Html.GetEnumSelectList<DM2Projekt.Models.Enums.BookingStatus>()">
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const roomSelect = document.querySelector("#Booking_RoomId");
            const smartboardSelect = document.querySelector("#SmartboardSelect");
            const smartboardWrapper = document.getElementById("SmartboardWrapper");
            const noSmartboardMsg = document.getElementById("NoSmartboardMessage");

            const weekStartInput = document.querySelector("#weekStart");
            const dayOfWeekSelect = document.querySelector("#dayOfWeek");
            const timeSlotSelect = document.querySelector("#timeSlot");
            const startInput = document.querySelector("#Booking_StartTime");
            const endInput = document.querySelector("#Booking_EndTime");

            function loadSmartboards(roomId) {
                smartboardSelect.innerHTML = '';
                smartboardSelect.style.display = 'none';
                noSmartboardMsg.style.display = 'none';

                fetch(`?handler=SmartboardsByRoom&roomId=${roomId}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.length === 0) {
                            noSmartboardMsg.style.display = 'block';
                        } else {
                            smartboardSelect.style.display = 'block';
                            const optOut = document.createElement("option");
                            optOut.value = "";
                            optOut.textContent = "-- I don't want a smartboard --";
                            smartboardSelect.appendChild(optOut);

                            data.forEach(sb => {
                                const option = document.createElement("option");
                                option.value = sb.smartboardId;
                                option.textContent = sb.display;
                                smartboardSelect.appendChild(option);
                            });
                        }
                    });
            }

            function fetchAvailableTimeSlots() {
                const roomId = roomSelect.value;
                const weekStart = weekStartInput.value;
                const dayOfWeek = parseInt(dayOfWeekSelect.value);

                if (!roomId || !weekStart || !dayOfWeek) {
                    timeSlotSelect.innerHTML = '<option value="">-- Select Room + Day --</option>';
                    return;
                }

                const date = new Date(weekStart);
                date.setDate(date.getDate() + (dayOfWeek - 1));
                const isoDate = date.toISOString().split('T')[0];

                fetch(`?handler=AvailableTimeSlots&roomId=${roomId}&date=${isoDate}`)
                    .then(response => response.json())
                    .then(data => {
                        timeSlotSelect.innerHTML = '';
                        if (data.length === 0) {
                            timeSlotSelect.innerHTML = '<option value="">No available slots</option>';
                            return;
                        }

                        data.forEach(slot => {
                            const option = document.createElement("option");
                                    option.value = slot.value;
        option.textContent = `${slot.start} - ${slot.end}`;

                            timeSlotSelect.appendChild(option);
                        });
                    });
            }

            roomSelect.addEventListener("change", function () {
                loadSmartboards(this.value);
                fetchAvailableTimeSlots();
            });
            weekStartInput.addEventListener("change", fetchAvailableTimeSlots);
            dayOfWeekSelect.addEventListener("change", fetchAvailableTimeSlots);

            timeSlotSelect.addEventListener("change", function () {
                const start = this.value;
                if (start) {
                    const startDate = new Date(start);
                    const endDate = new Date(startDate.getTime() + 2 * 60 * 60 * 1000);
                    startInput.value = startDate.toISOString();
                    endInput.value = endDate.toISOString();
                }
            });

            if (roomSelect.value) {
                roomSelect.dispatchEvent(new Event("change"));
            }
        });
    </script>
}
