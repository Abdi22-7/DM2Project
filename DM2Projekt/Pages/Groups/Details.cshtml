@page
@model DM2Projekt.Pages.Groups.DetailsModel
@using Humanizer

@{
    ViewData["Title"] = "Group Details";
    var userRole = HttpContext.Session.GetString("UserRole");
    var userId = HttpContext.Session.GetInt32("UserId");

    var isCreator = Model.Group.CreatedByUser.UserId == userId;
    var isMember = Model.Members.Any(u => u.UserId == userId);
    var canEdit = ViewData["CanEdit"] is bool b && b;
}

<div class="container mt-4">
    <h1 class="mb-4">@Model.Group.GroupName</h1>

    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @Model.SuccessMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- 👥 Members -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <h5 class="card-title mb-3">👥 Members (@Model.Members.Count)</h5>

            @if (Model.Members.Any())
            {
                <ul class="list-group">
                    @foreach (var user in Model.Members)
                    {
                        var isThisCreator = user.UserId == Model.Group.CreatedByUser.UserId;

                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center">
                                @if (!string.IsNullOrEmpty(user.ProfileImagePath))
                                {
                                    <img src="@user.ProfileImagePath"
                                         alt="Profile" class="rounded-circle me-3"
                                         style="width: 40px; height: 40px; object-fit: cover;"
                                         onerror="this.onerror=null; this.src='/images/default-profile.png';" />
                                }
                                else
                                {
                                    <i class="bi bi-person-circle fs-3 me-3 text-secondary"></i>
                                }

                                <div>
                                    <strong>@user.FirstName @user.LastName</strong>
                                    @if (isThisCreator)
                                    {
                                        <span class="badge bg-primary ms-2">Creator</span>
                                    }
                                    <div class="text-muted small">(@user.Role)</div>
                                </div>
                            </div>

                            @if (isCreator && user.UserId != userId)
                            {
                                <form method="post" asp-page-handler="Kick" class="d-inline">
                                    <input type="hidden" name="KickUserId" value="@user.UserId" />
                                    <input type="hidden" name="KickGroupId" value="@Model.Group.GroupId" />
                                    <button type="submit" class="btn btn-sm btn-outline-danger">
                                        <i class="bi bi-person-dash"></i> Remove
                                    </button>
                                </form>
                            }
                        </li>
                    }
                </ul>
            }
            else
            {
                <p class="text-muted mb-0">No members yet.</p>
            }

            @if (isMember && !isCreator && userRole == "Student")
            {
                <form method="post" asp-page-handler="Leave" class="mt-3">
                    <input type="hidden" name="LeaveGroupId" value="@Model.Group.GroupId" />
                    <button type="submit" class="btn btn-outline-danger">
                        <i class="bi bi-door-open"></i> Leave Group
                    </button>
                </form>
            }
        </div>
    </div>

    <!-- ✉️ Pending Invitations -->
    @if (isCreator)
    {
        <div class="card shadow-sm mb-4">
            <div class="card-body">
                <h5 class="card-title mb-3">📨 Pending Invitations (@Model.PendingInvites.Count)</h5>

                @if (Model.PendingInvites.Any())
                {
                    <ul class="list-group">
                        @foreach (var invite in Model.PendingInvites)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span>
                                    @invite.InvitedUser?.FirstName @invite.InvitedUser?.LastName
                                    <span class="text-muted">(@invite.InvitedUser?.Email)</span>
                                    • <small class="text-muted">@invite.SentAt.Humanize(false)</small>
                                </span>
                                <form method="post" asp-page-handler="CancelInvite" class="d-inline">
                                    <input type="hidden" name="CancelInviteId" value="@invite.InvitationId" />
                                    <button type="submit" class="btn btn-sm btn-outline-danger">
                                        <i class="bi bi-x-circle"></i> Cancel
                                    </button>
                                </form>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-muted mb-0">No pending invitations.</p>
                }
            </div>
        </div>
    }

    <!-- Navigation -->
    <div class="d-flex justify-content-between">
        <a asp-page="./Index" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i> Back to Groups
        </a>

        @if (canEdit)
        {
            <a asp-page="./Edit" asp-route-id="@Model.Group.GroupId" class="btn btn-warning">
                <i class="bi bi-pencil-square"></i> Edit
            </a>
        }
    </div>
</div>
